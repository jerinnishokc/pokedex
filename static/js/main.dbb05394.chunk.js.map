{"version":3,"sources":["assets/pokeball.png","pages/homepage/homepage.component.jsx","components/navbar/navbar.component.jsx","components/card/card.component.jsx","components/collection-overview/collection-overview.component.jsx","pages/pokedex/pokedex.component.jsx","pages/pokegame/pokegame.component.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","HomePage","className","strings","typeSpeed","backSpeed","loop","Navbar","to","src","Logo","alt","Card","item","imageUrl","name","type","base_experience","CollectionOverview","collection","map","key","id","Pokedex","state","collectionWithImage","this","a","paddedId","slice","padTo3","fetch","then","resp","url","catch","error","console","log","Promise","all","setState","React","Component","Pokegame","team1","team2","length","randomIndex","Math","floor","random","push","splice","teams","score","reduce","accumulator","reducer","poketeams","randomSplitter","calculateScore","winner","style","defaultProps","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.dbb05394.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pokeball.83d6b10f.png\";","import React from 'react';\r\nimport './homepage.styles.scss';\r\nimport Typed from 'react-typed';\r\n\r\nconst HomePage = () => { \r\n    return (\r\n        <div>\r\n            <h1 className=\"title\">HomePage</h1>\r\n            <Typed\r\n                    strings={['Here you can find anything']}\r\n                    typeSpeed={40}\r\n                />\r\n                <br/>\r\n\r\n                <Typed\r\n                strings={[\r\n                    'Search for products',\r\n                    'Search for categories',\r\n                    'Search for brands']}\r\n                    typeSpeed={40}\r\n                    backSpeed={50}                    \r\n                    loop >\r\n                </Typed>\r\n        </div>\r\n    ); \r\n}\r\n\r\nexport default HomePage;","import React from 'react';\r\n// import {ReactComponent as Pokeball} from '../../assets/pokeball.svg';\r\nimport Logo from '../../assets/pokeball.png';\r\nimport './navbar.styles.scss';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <div className=\"navbar-container\">\r\n            <Link to='/' className=\"logo-container\">\r\n                <img className=\"logo\" src={Logo} alt=\"logo\" />\r\n                {/*<Pokeball className=\"logo\"/>*/}\r\n            </Link>\r\n            <div className=\"navs\">\r\n                <div className=\"nav-link\">\r\n                    <Link to=\"/pokedexs\">Pokedex</Link>\r\n                </div>\r\n                <div className=\"nav-link\">\r\n                    <Link to=\"/pokegame\">Pokegame</Link>\r\n                </div>\r\n                <div className=\"nav-link\">\r\n                    <Link to=\"/\">About</Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport './card.styles.scss';\r\n\r\nconst Card = ({item}) => {\r\n    return (        \r\n      <div className=\"flip-card\">\r\n        <div className=\"flip-card-inner\">\r\n          <div className=\"flip-card-front\">\r\n           <img src={item.imageUrl} alt=\"Pokemon\"/>\r\n          </div>\r\n          <div className=\"flip-card-back\">\r\n            <h1>{item.name}</h1> \r\n            <p>This is {item.type} pokemon!</p> \r\n            <p>Exp: {item.base_experience}</p> \r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from '../card/card.component';\r\nimport './collection-overview.styles.scss';\r\n\r\nconst CollectionOverview = ({collection}) => {\r\n    return (\r\n        <div className=\"collection-overview-container\">\r\n            {\r\n                collection.map(item => {\r\n                    return (<Card key={item.id} item={item}></Card>);\r\n                })\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CollectionOverview;\r\n","import React from 'react';\r\nimport CollectionOverview from '../../components/collection-overview/collection-overview.component';\r\n\r\nclass Pokedex extends React.Component {\r\n    state = {\r\n        collection: [\r\n            {id: 4, name: 'Charmander', type: 'fire', base_experience: 62, imageUrl: ''},\r\n            {id: 7, name: 'Squirtle', type: 'water', base_experience: 63},\r\n            {id: 11, name: 'Metapod', type: 'bug', base_experience: 72},\r\n            {id: 12, name: 'Butterfree', type: 'flying', base_experience: 178},\r\n            {id: 25, name: 'Pikachu', type: 'electric', base_experience: 112},\r\n            {id: 39, name: 'Jigglypuff', type: 'normal', base_experience: 95},\r\n            {id: 94, name: 'Gengar', type: 'poison', base_experience: 225},\r\n            {id: 133, name: 'Eevee', type: 'normal', base_experience: 65}\r\n          ]\r\n    };\r\n\r\n    componentDidMount() {\r\n        let collectionWithImage = this.state.collection.map(async item => {\r\n            // const paddedId = item.id.toString().padStart(3,'0'); --> option 1\r\n            // Option 2\r\n            const padTo3 = id => id <= 999 ? `00${id}`.slice(-3) : id; \r\n            const paddedId = padTo3(item.id);            \r\n            await fetch(`https://assets.pokemon.com/assets/cms2/img/pokedex/detail/${paddedId}.png`)\r\n            .then(resp => item.imageUrl = resp.url)\r\n            .catch(error => console.log(error));\r\n            return item;\r\n        });\r\n\r\n        Promise.all(collectionWithImage)\r\n        .then(resp => {\r\n            collectionWithImage = resp;\r\n            this.setState({collection: collectionWithImage});\r\n        })\r\n        .catch(error => console.log(error));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"pokedex-container\">\r\n                <h1>Pokedex</h1>\r\n                <CollectionOverview collection={this.state.collection}></CollectionOverview>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Pokedex;","import React from 'react';\r\nimport './pokegame.styles.scss';\r\nimport CollectionOverview from '../../components/collection-overview/collection-overview.component';\r\n\r\nclass Pokegame extends React.Component {\r\n    state = {\r\n        collection: [\r\n            {id: 4, name: 'Charmander', type: 'fire', base_experience: 62, imageUrl: ''},\r\n            {id: 7, name: 'Squirtle', type: 'water', base_experience: 63},\r\n            {id: 11, name: 'Metapod', type: 'bug', base_experience: 72},\r\n            {id: 12, name: 'Butterfree', type: 'flying', base_experience: 178},\r\n            {id: 25, name: 'Pikachu', type: 'electric', base_experience: 112},\r\n            {id: 39, name: 'Jigglypuff', type: 'normal', base_experience: 95},\r\n            {id: 94, name: 'Gengar', type: 'poison', base_experience: 225},\r\n            {id: 133, name: 'Eevee', type: 'normal', base_experience: 65}\r\n          ]\r\n    };\r\n\r\n    static defaultProps = {name:'hello'};\r\n\r\n    componentDidMount() {\r\n        console.log('Pokegame componentDidMount()');\r\n        let collectionWithImage = this.state.collection.map(async item => {\r\n            // const paddedId = item.id.toString().padStart(3,'0'); --> option 1\r\n            // Option 2\r\n            const padTo3 = id => id <= 999 ? `00${id}`.slice(-3) : id; \r\n            const paddedId = padTo3(item.id);            \r\n            await fetch(`https://assets.pokemon.com/assets/cms2/img/pokedex/detail/${paddedId}.png`)\r\n            .then(resp => item.imageUrl = resp.url)\r\n            .catch(error => console.log(error));\r\n            return item;\r\n        });\r\n\r\n        Promise.all(collectionWithImage)\r\n        .then(resp => {\r\n            collectionWithImage = resp;\r\n            this.setState({collection: collectionWithImage});\r\n        })\r\n        .catch(error => console.log(error));\r\n    }\r\n\r\n    randomSplitter() {\r\n        const team1 = [];\r\n        const team2 = [...this.state.collection];\r\n\r\n        while(team1.length < team2.length) {\r\n            const randomIndex = Math.floor(Math.random() * team2.length);\r\n            team1.push(team2.splice(randomIndex,1)[0]);\r\n        }\r\n\r\n        return { team1: team1, team2: team2};\r\n    }\r\n\r\n    calculateScore(teams) {\r\n        teams.team1.score = teams.team1.reduce((accumulator,reducer) => accumulator + reducer.base_experience, 0);\r\n        teams.team2.score = teams.team2.reduce((accumulator,reducer) => accumulator + reducer.base_experience, 0);\r\n    }\r\n\r\n    render() {\r\n        const poketeams = this.randomSplitter();\r\n        this.calculateScore(poketeams);\r\n        poketeams.team1.score > poketeams.team2.score ? poketeams.team1.winner = true : poketeams.team2.winner = true;\r\n\r\n        return (\r\n            <div className=\"pokegame-container\">\r\n                <h1>POKEGAME</h1>\r\n                <div className=\"team1\">\r\n                    <h2 className=\"title\">Team1</h2>\r\n                    <div className=\"score-board\" >\r\n                        <span style={{\r\n                            'fontSize': '20px',\r\n                            'fontWeight': 'bold',\r\n                            'color': poketeams.team1.winner ? 'chartreuse' : 'red',\r\n                            'display': 'block'\r\n                        }}>\r\n                        {\r\n                            poketeams.team1.winner ? 'Wins' : 'Loses'\r\n                        }\r\n                        </span>\r\n                        <span>Score: {poketeams.team1.score}</span>\r\n                    </div>\r\n                    <CollectionOverview collection={poketeams.team1}></CollectionOverview>                 \r\n                </div>\r\n                <div className=\"team2\">\r\n                    <h2 className=\"title\">Team2</h2>\r\n                    <div className=\"score-board\">\r\n                        <span style={{\r\n                            'fontSize': '20px',                            \r\n                            'fontWeight': 'bold',\r\n                            'color': poketeams.team2.winner ? 'chartreuse' : 'red',\r\n                            'display': 'block'\r\n                        }}>\r\n                        {\r\n                            poketeams.team2.winner ? 'Wins' : 'Loses'\r\n                        }\r\n                        </span>\r\n                        <span>Score: {poketeams.team2.score}</span>\r\n                    </div>\r\n                    <CollectionOverview collection={poketeams.team2}></CollectionOverview>                    \r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Pokegame;","import React from 'react';\nimport './App.css';\nimport HomePage from './pages/homepage/homepage.component';\nimport Navbar from './components/navbar/navbar.component';\nimport {Switch, Route} from 'react-router-dom';\nimport Pokedex from './pages/pokedex/pokedex.component';\nimport Pokegame from './pages/pokegame/pokegame.component';\n\nfunction App() {\n  return (\n    <div className=\"main-app\">\n      <div className=\"navbar\">\n        <Navbar></Navbar>\n      </div>\n      <Switch>\n        <Route exact path=\"/\" component={HomePage}></Route>\n        <Route path=\"/pokedexs\" component={Pokedex}></Route>\n        <Route path=\"/pokegame\" component={Pokegame}></Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}